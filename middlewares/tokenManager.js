const jwt = require('jsonwebtoken');

const secret = 'uX7001aYpeKbh666oK';

const generateToken = async thisUser => {
    return jwt.sign({
            user: {
                id: thisUser._id.toString(),
                admin: thisUser.isAdmin
            }
        },
        secret, {
            expiresIn: "1h" // i think its not right :|
        }
    );
}

//for web socket reqs:
// define exclusive error model
// define english and persian error msgs
const verifyTokenForWS = (token, thisUserID) => {
    let decodedToken = undefined;
    try {
        decodedToken = jwt.verify(token, secret);
    } catch (err) {
        throw err;
    }
    if (!decodedToken) {
        throw new Error('Not authenticated.'); //GoFuckYourSelfALittle Error: 466 => token not decoded and not generated by me
    } else if (!decodedToken.user) {
        throw new Error('token is missing vital information... it may have been compromised'); //GoFuckYourSelfCompletely Error: 466 => token decoded but its not generated by me
    } else if (decodedToken.user.id !== thisUserID) {
        throw new Error('data stored in the token doesnt match with user\'s actual ID... this token may have been stolen'); //GoFuckYourSelfThief Error: 466 => token decoded and generated by me nut has been stolen
    }
    return decodedToken.user;
}

//for http reqs
const authenticateToken = (req, res, next) => {
    const authHeader = req.get('Authorization');
    if (!authHeader) { //not signed in yet
        const error = new Error('Not authenticated.');
        error.statusCode = 401;
        throw error;
    }
    const token = authHeader.split(' ')[1];
    // const t0 = Date.now();
    let decodedToken = undefined;
    try {
        decodedToken = jwt.verify(token, secret);
    } catch (err) {
        err.statusCode = 420; //session expired
        throw err;
    }
    if (!decodedToken) {
        const error = new Error('Not authenticated.');
        error.statusCode = 465; //GoFuckYourSelfALittle Error: 466 => token not decoded and not generated by me
        throw error;
    }
    //add user to request then use it in adminAuthenticate
    else if (!decodedToken.user) {
        const error = new Error('token is missing vital information... it may have been compromised');
        error.statusCode = 466; //GoFuckYourSelfCompletely Error: 466 => token decoded but its not generated by me
        throw error;
    }
    // const t1 = Date.now();
    //console.log('token check time: ', (t1 - t0) / 1000, 'ms');
    req.CurrentUser = { id: decodedToken.user.id, admin: decodedToken.user.admin };
    next();
};

module.exports = {
    verifyTokenForWS,
    generateToken,
    authenticateToken
};